name: Deploy Application

on:
    push:
        branches: [docker]
env:
  DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.SECRET_ACCESS_KEY}}
  ANSIBLE_HOST_KEY_CHECKING: False

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Java
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: '17'
            - name: Build project
              run: mvn clean install -DskipTests
            - name: Login Docker Hub
              run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
            - name: Build docker image
              run: docker build -t khensane/inversion .
            - name: Push image docker
              run: docker push khensane/inversion         
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: verificar arquivos
              run: ls /home/runner/work/Inversion-api-aws/Inversion-api-aws
              
            - name: Setup terraform
              uses: hashicorp/setup-terraform@v2.0.3
        
            - name: Init terraform
              working-directory: ./
              run: |
                terraform init
                
            - name: Destroy terraform
              working-directory: ./
              run: |
                terraform destroy -auto-approve
        
            - name: Setup SSH
              working-directory: ./
              run: |
                mkdir -p ~/.ssh
                echo "$DEPLOY_KEY" > ~/.ssh/id_rsa.pem
                chmod 400 ~/.ssh/id_rsa.pem
        
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                python-version: 3.x
        
            - name: Install Ansible
              run: |
                python -m pip install --upgrade pip
                pip install ansible
                
            - name: Create terraform infrastructure
              working-directory: ./
              run: |
                terraform apply -auto-approve
        
            - name: Get Terraform Output
              id: terraform_output
              run: |
                INSTANCE_IP=$(terraform output -raw public_ip)
                echo "::set-output name=instance_ip::$INSTANCE_IP"
                echo "[servidores]" > ansible/inventario
                echo "$INSTANCE_IP ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa.pem" >> ansible/inventario
                cd ansible
                ansible-playbook -i inventario site.yml
              shell: bash

            - name: Deploy using Ansible
              run: |
                INSTANCE_IP=$(terraform output -raw public_ip)
                echo "::set-output name=instance_ip::$INSTANCE_IP"
                echo "[ec2]" > ansible/inventario
                echo "$INSTANCE_IP ansible_ssh_user=admin ansible_ssh_private_key_file=~/.ssh/id_rsa.pem" >> ansible/inventario
                ansible-playbook -i ansible/inventario playbook.yml